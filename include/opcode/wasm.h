WASM_OPCODE("nop", void, void, special, agnostic, 0x00)
WASM_OPCODE("block", void, void, special, agnostic, 0x01)
WASM_OPCODE("loop", void, void, special, agnostic, 0x02)
WASM_OPCODE("if", void, void, special, agnostic, 0x03)
WASM_OPCODE("else", void, void, special, agnostic, 0x04)
WASM_OPCODE("select", any, any, select, agnostic, 0x05)
WASM_OPCODE("br", void, void, break, agnostic, 0x06)
WASM_OPCODE("br_if", void, void, break_if, agnostic, 0x07)
WASM_OPCODE("br_table", void, void, break_table, agnostic, 0x08)
WASM_OPCODE("return", void, void, return, agnostic, 0x09)
WASM_OPCODE("unreachable", void, void, special, agnostic, 0x0a)
WASM_OPCODE("end", void, void, special, agnostic, 0x0f)

WASM_OPCODE("load8", i32, i32, load, signed, 0x20)
WASM_OPCODE("load8", i32, i32, load, unsigned, 0x21)
WASM_OPCODE("load16", i32, i32, load, signed, 0x22)
WASM_OPCODE("load16", i32, i32, load, unsigned, 0x23)
WASM_OPCODE("load", i32, i32, load, agnostic, 0x2a)
WASM_OPCODE("load8", i32, i64, load, signed, 0x24)
WASM_OPCODE("load8", i32, i64, load, unsigned, 0x25)
WASM_OPCODE("load16", i32, i64, load, signed, 0x26)
WASM_OPCODE("load16", i32, i64, load, unsigned, 0x27)
WASM_OPCODE("load32", i32, i64, load, signed, 0x28)
WASM_OPCODE("load32", i32, i64, load, unsigned, 0x29)
WASM_OPCODE("load", i32, i64, load, agnostic, 0x2b)
WASM_OPCODE("load", i32, f32, load, agnostic, 0x2c)
WASM_OPCODE("load", i32, f64, load, agnostic, 0x2d)

WASM_OPCODE("store8", i32, void, store, agnostic, 0x2e)
WASM_OPCODE("store16", i32, void, store, agnostic, 0x2f)
WASM_OPCODE("store", i32, void, store, agnostic, 0x33)
WASM_OPCODE("store8", i64, void, store, agnostic, 0x30)
WASM_OPCODE("store16", i64, void, store, agnostic, 0x31)
WASM_OPCODE("store32", i64, void, store, agnostic, 0x32)
WASM_OPCODE("store", i64, void, store, agnostic, 0x34)
WASM_OPCODE("store", f32, void, store, agnostic, 0x35)
WASM_OPCODE("store", f64, void, store, agnostic, 0x36)

WASM_OPCODE("const", i64, i64, constant, agnostic, 0x11)
WASM_OPCODE("const", f32, f32, constant_f32, agnostic, 0x12)
WASM_OPCODE("const", f64, f64, constant_f64, agnostic, 0x13)
WASM_OPCODE("get_local", any, any, get_local, agnostic, 0x14)
WASM_OPCODE("set_local", any, any, set_local, agnostic, 0x15)
WASM_OPCODE("call", any, any, call, agnostic, 0x16)
WASM_OPCODE("call_indirect", any, any, call_indirect, agnostic, 0x17)
WASM_OPCODE("call_import", any, any, call, agnostic, 0x18)

WASM_OPCODE("const", i32, i32, constant, agnostic, 0x10)
WASM_OPCODE("const", i64, i64, constant, agnostic, 0x11)
WASM_OPCODE("const", f32, f32, constant_f32, agnostic, 0x12)
WASM_OPCODE("const", f64, f64, constant_f64, agnostic, 0x13)
WASM_OPCODE("get_local", any, any, get_local, agnostic, 0x14)
WASM_OPCODE("set_local", any, any, set_local, agnostic, 0x15)
WASM_OPCODE("call", any, any, call, agnostic, 0x16)
WASM_OPCODE("call_indirect", any, any, call_indirect, agnostic, 0x17)
WASM_OPCODE("call_import", any, any, call, agnostic, 0x18)

WASM_OPCODE("add", i32, i32, binary, agnostic, 0x40)
WASM_OPCODE("sub", i32, i32, binary, agnostic, 0x41)
WASM_OPCODE("mul", i32, i32, binary, agnostic, 0x42)
WASM_OPCODE("div", i32, i32, binary, signed,   0x43)
WASM_OPCODE("div", i32, i32, binary, unsigned, 0x44)
WASM_OPCODE("rem", i32, i32, binary, signed,   0x45)
WASM_OPCODE("rem", i32, i32, binary, unsigned, 0x46)
WASM_OPCODE("and", i32, i32, binary, agnostic, 0x47)
WASM_OPCODE("or",  i32, i32, binary, agnostic, 0x48)
WASM_OPCODE("xor", i32, i32, binary, agnostic, 0x49)
WASM_OPCODE("shl", i32, i32, binary, agnostic, 0x4a)
WASM_OPCODE("shr", i32, i32, binary, unsigned, 0x4b)
WASM_OPCODE("shr", i32, i32, binary, signed,   0x4c)
WASM_OPCODE("rotr", i32, i32, binary, agnostic, 0xb6)
WASM_OPCODE("rotl", i32, i32, binary, agnostic, 0xb7)

WASM_OPCODE("eq", i32, i32, relational, agnostic, 0x4d)
WASM_OPCODE("ne", i32, i32, relational, agnostic, 0x4e)
WASM_OPCODE("lt", i32, i32, relational, signed,   0x4f)
WASM_OPCODE("le", i32, i32, relational, signed,   0x50)
WASM_OPCODE("gt", i32, i32, relational, signed,   0x53)
WASM_OPCODE("ge", i32, i32, relational, signed,   0x54)
WASM_OPCODE("lt", i32, i32, relational, unsigned, 0x51)
WASM_OPCODE("le", i32, i32, relational, unsigned, 0x52)
WASM_OPCODE("gt", i32, i32, relational, unsigned, 0x55)
WASM_OPCODE("ge", i32, i32, relational, unsigned, 0x56)

WASM_OPCODE("clz", i32, i32, unary, agnostic,    0x57)
WASM_OPCODE("ctz", i32, i32, unary, agnostic,    0x58)
WASM_OPCODE("popcnt", i32, i32, unary, agnostic, 0x59)
WASM_OPCODE("eqz", i32, i32, eqz, agnostic,    0x5a)

WASM_OPCODE("add", i64, i64, binary, agnostic, 0x5b)
WASM_OPCODE("sub", i64, i64, binary, agnostic, 0x5c)
WASM_OPCODE("mul", i64, i64, binary, agnostic, 0x5d)
WASM_OPCODE("div", i64, i64, binary, signed,   0x5e)
WASM_OPCODE("div", i64, i64, binary, unsigned, 0x5f)
WASM_OPCODE("rem", i64, i64, binary, signed,   0x60)
WASM_OPCODE("rem", i64, i64, binary, unsigned, 0x61)
WASM_OPCODE("and", i64, i64, binary, agnostic, 0x62)
WASM_OPCODE("or",  i64, i64, binary, agnostic, 0x63)
WASM_OPCODE("xor", i64, i64, binary, agnostic, 0x64)
WASM_OPCODE("shl", i64, i64, binary, agnostic, 0x65)
WASM_OPCODE("shr", i64, i64, binary, unsigned, 0x66)
WASM_OPCODE("shr", i64, i64, binary, signed,   0x67)
WASM_OPCODE("rotr", i64, i64, binary, agnostic, 0xb8)
WASM_OPCODE("rotl", i64, i64, binary, agnostic, 0xb9)

WASM_OPCODE("eq", i64, i32, relational, agnostic, 0x68)
WASM_OPCODE("ne", i64, i32, relational, agnostic, 0x69)
WASM_OPCODE("lt", i64, i32, relational, signed,   0x6a)
WASM_OPCODE("le", i64, i32, relational, signed,   0x6b)
WASM_OPCODE("gt", i64, i32, relational, signed,   0x6e)
WASM_OPCODE("ge", i64, i32, relational, signed,   0x6f)
WASM_OPCODE("lt", i64, i32, relational, unsigned, 0x6c)
WASM_OPCODE("le", i64, i32, relational, unsigned, 0x6c)
WASM_OPCODE("gt", i64, i32, relational, unsigned, 0x70)
WASM_OPCODE("ge", i64, i32, relational, unsigned, 0x71)

WASM_OPCODE("clz", i64, i64, unary, agnostic,    0x72)
WASM_OPCODE("ctz", i64, i64, unary, agnostic,    0x73)
WASM_OPCODE("popcnt", i64, i64, unary, agnostic, 0x74)
WASM_OPCODE("eqz", i64, i32, eqz, agnostic,    0xba)

WASM_OPCODE("add", f32, f32, binary, floating, 0x75)
WASM_OPCODE("sub", f32, f32, binary, floating, 0x76)
WASM_OPCODE("mul", f32, f32, binary, floating, 0x77)
WASM_OPCODE("div", f32, f32, binary, floating, 0x78)
WASM_OPCODE("min", f32, f32, binary, floating, 0x79)
WASM_OPCODE("max", f32, f32, binary, floating, 0x7a)
WASM_OPCODE("abs", f32, f32,  unary, floating, 0x7b)
WASM_OPCODE("neg", f32, f32,  unary, floating, 0x7c)
WASM_OPCODE("copysign", f32, f32, binary, floating, 0x7d)
WASM_OPCODE("ceil", f32, f32,  unary, floating, 0x7e)
WASM_OPCODE("floor", f32, f32,  unary, floating, 0x7f)
WASM_OPCODE("trunc", f32, f32,  unary, floating, 0x80)
WASM_OPCODE("nearest", f32, f32,  unary, floating, 0x81)
WASM_OPCODE("sqrt", f32, f32,  unary, floating, 0x82)

WASM_OPCODE("eq", f32, i32, relational, floating, 0x83)
WASM_OPCODE("ne", f32, i32, relational, floating, 0x84)
WASM_OPCODE("lt", f32, i32, relational, floating, 0x85)
WASM_OPCODE("le", f32, i32, relational, floating, 0x86)
WASM_OPCODE("gt", f32, i32, relational, floating, 0x87)
WASM_OPCODE("ge", f32, i32, relational, floating, 0x88)

WASM_OPCODE("add", f64, f64, binary, floating, 0x89)
WASM_OPCODE("sub", f64, f64, binary, floating, 0x8a)
WASM_OPCODE("mul", f64, f64, binary, floating, 0x8b)
WASM_OPCODE("div", f64, f64, binary, floating, 0x8c)
WASM_OPCODE("min", f64, f64, binary, floating, 0x8d)
WASM_OPCODE("max", f64, f64, binary, floating, 0x8e)
WASM_OPCODE("abs", f64, f64,  unary, floating, 0x8f)
WASM_OPCODE("neg", f64, f64,  unary, floating, 0x90)
WASM_OPCODE("copysign", f64, f64, binary, floating, 0x91)
WASM_OPCODE("ceil", f64, f64,  unary, floating, 0x92)
WASM_OPCODE("floor", f64, f64,  unary, floating, 0x93)
WASM_OPCODE("trunc", f64, f64,  unary, floating, 0x94)
WASM_OPCODE("nearest", f64, f64,  unary, floating, 0x95)
WASM_OPCODE("sqrt", f64, f64,  unary, floating, 0x96)

WASM_OPCODE("eq", f64, i32, relational, floating, 0x97)
WASM_OPCODE("ne", f64, i32, relational, floating, 0x98)
WASM_OPCODE("lt", f64, i32, relational, floating, 0x99)
WASM_OPCODE("le", f64, i32, relational, floating, 0x9a)
WASM_OPCODE("gt", f64, i32, relational, floating, 0x9b)
WASM_OPCODE("ge", f64, i32, relational, floating, 0x9c)

WASM_OPCODE("trunc", f32, i32, conv, signed, 0x9d)
WASM_OPCODE("trunc", f64, i32, conv, signed, 0x9e)
WASM_OPCODE("trunc", f32, i32, conv, unsigned, 0x9f)
WASM_OPCODE("trunc", f64, i32, conv, unsigned, 0xa0)
WASM_OPCODE("trunc", f32, i64, conv, signed, 0xa2)
WASM_OPCODE("trunc", f64, i64, conv, signed, 0xa3)
WASM_OPCODE("trunc", f32, i64, conv, unsigned, 0xa4)
WASM_OPCODE("trunc", f64, i64, conv, unsigned, 0xa5)

WASM_OPCODE("extend", i32, i64, conv, unsigned, 0xa6)
WASM_OPCODE("extend", i32, i64, conv,   signed, 0xa7)

WASM_OPCODE("convert", i32, f32, conv, signed, 0xa8)
WASM_OPCODE("convert", i32, f32, conv, unsigned, 0xa9)
WASM_OPCODE("convert", i64, f32, conv, signed, 0xaa)
WASM_OPCODE("convert", i64, f32, conv, unsigned, 0xab)
WASM_OPCODE("convert", i32, f64, conv, signed, 0xae)
WASM_OPCODE("convert", i32, f64, conv, unsigned, 0xaf)
WASM_OPCODE("convert", i64, f64, conv, signed, 0xb0)
WASM_OPCODE("convert", i64, f64, conv, unsigned, 0xb1)

WASM_OPCODE("promote", f32, f64, conv, floating, 0xb2)
WASM_OPCODE("demote", f64, f32, conv, floating, 0xac)

WASM_OPCODE("reinterpret", i32, f32, conv, agnostic, 0xad)
WASM_OPCODE("reinterpret", f32, i32, conv, agnostic, 0xb4)
WASM_OPCODE("reinterpret", i64, f64, conv, agnostic, 0xb3)
WASM_OPCODE("reinterpret", f64, i64, conv, agnostic, 0xb5)

WASM_OPCODE("wrap", i64, i32, conv, agnostic, 0xa1)
